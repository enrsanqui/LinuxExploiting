#!/usr/bin/env python
#-*- coding: utf-8 -*-
#
# Author: blackSparrow
# Date: 2017/08/20
#
# Info: This script receives a formatted txt file with the opcodes and 
# returns the shellcode for further uses
#
# Inputs: path to the file
# Output: shellcode
#
#
# Usage ./op2Shell file.txt
# To generate file.txt
# objdump -d ./program | tr -s ' ' | tr -d '\t' | cut -d: -f2 | sed '/^$/d' > file.txt
#
import sys

def op2Shell(file):
	f = open(file,'r')
	f.readline()
	lines = f.readlines()
	f.close()
	shellAux = []

	for aux in lines:
		j = 0
		while len(aux.split()[j])<3:
			shellAux.append(aux.split()[j])
			j = j+1

	shellcode = r'\x'
	shellcode = shellcode.join(shellAux)
	shellcode = r'\x' + shellcode
	print shellcode

if __name__ == '__main__':
	op2Shell(sys.argv[1])
